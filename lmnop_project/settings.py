"""
Django settings for LMNOPsite project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8c01$#j44g3znb)$q0()8)!%ts-jc)k12!a75-!63qb%bj=d4k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'lmn'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'lmnop_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lmnop_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {

# Uncomment this when you are ready to use Postgres.

    #'default': {
        #'ENGINE': 'django.db.backends.postgresql',
        #'NAME': 'artists-venues-shows-notes',
        #'USER' : 'fan-girl',
        #'PASSWORD' : os.getenv('LMNOP_DB_PW'),
        #'PASSWORD' : os.getenv('LMNOP_DB_PW2'),
        #'HOST' : '/cloudsql/lmnop-nick-vina-khan-james:us-central1:lmnop-db',
        #'PORT' : '5432',
    #},
    
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'LMNOP',
    #     'USER' : 'LMNOP',
    #     'PASSWORD' : os.environ['LMNOP_DB_PW'],
    #     'HOST' : 'salt',
    #     'PORT' : '5432',
    # },

    # When you use Postgres, comment out or remove this DB config. 
    
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'lmnop.sqlite',
    }
}

if not os.getenv('GAE_INSTANCE'):
    DATABASES['default']['HOST'] = '127.0.0.1'

if os.getenv('GAE_INSTANCE'):
    ALLOWED_HOSTS = ['lmnop-nick-vina-khan-james.appspot.com']
else:
    ALLOWED_HOSTS = ['127.0.0.1']

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators



AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'www', 'static')


# Media URL, for user-created media - becomes part of URL when images are displayed
MEDIA_URL = '/media/'

# Where in the file system to save user-uploaded files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')




# Where to send user after successful login if no other page is provided.
# Should provide the user object.
LOGIN_REDIRECT_URL = 'lmn:my_user_profile'
LOGOUT_REDIRECT_URL = 'lmn:homepage'

GS_STATIC_FILE_BUCKET = 'lmnop-nick-vina-khan-james.appspot.com'

#STATIC_URL = f'https://storage.cloud.google.com/{GS_STATIC_FILE_BUCKET}/static'